<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Jayzalex's Blog]]></title>
  <subtitle><![CDATA[编程是最易习得的超能力～]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jayzalex.github.io/"/>
  <updated>2015-02-06T08:31:03.747Z</updated>
  <id>http://jayzalex.github.io/</id>
  
  <author>
    <name><![CDATA[Jayzalex]]></name>
    <email><![CDATA[jayzalex@sina.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[如何合理地停止一个正在运行的java线程]]></title>
    <link href="http://jayzalex.github.io/2015/01/15/properly-stop-thread/"/>
    <id>http://jayzalex.github.io/2015/01/15/properly-stop-thread/</id>
    <published>2015-01-15T07:12:21.000Z</published>
    <updated>2015-01-15T08:53:15.000Z</updated>
    <content type="html"><![CDATA[<h1 id="不能使用Thread-stop()方法的原因">不能使用Thread.stop()方法的原因</h1>
<hr>
<p>Thread.stop()主要通过抛出一个ThreadDeath异常来中断线程运行。但是这个方法是不安全的，这是因为当调用Thread.stop()方法时，会发生下面两件事：</p>
<blockquote>
<ol>
<li>即刻抛出ThreadDeath异常，在线程的run()方法内，任何一点都有可能抛出ThreadDeath Error，包括在catch或finally语句中。</li>
<li>释放该线程所持有的所有的锁</li>
</ol>
</blockquote>
<p>方法的doc解释为：</p>
<blockquote>
<p>This method is inherently unsafe. Stopping a thread with Thread.stop causes it to unlock all of the monitors that it has locked (as a natural consequence of the unchecked ThreadDeath exception propagating up the stack). If any of the objects previously protected by these monitors were in an inconsistent state, the damaged objects become visible to other threads, potentially resulting in arbitrary behavior.……</p>
</blockquote>
<p>中文意思是：</p>
<blockquote>
<p>该方法天生是不安全的。使用thread.stop()停止一个线程，导致释放（解锁）所有该线程已经锁定的监视器（因沿堆栈向上传播的未检查异常ThreadDeath而解锁）。如果之前受这些监视器保护的任何对象处于不一致状态，则不一致状态的对象（受损对象）将对其他线程可见，这可能导致任意的行为。</p>
</blockquote>
<p>所以说，<strong>通过Thread.stop()停止一个正在运行的java线程是行不通的</strong>。<br>更多请参考：<br><a href="http://yeziwang.iteye.com/blog/844649" target="_blank" rel="external">为什么不能使用Thread.stop()方法？</a></p>
<h1 id="停止flag+Thread-interrupt()停止线程运行">停止flag+Thread.interrupt()停止线程运行</h1>
<hr>
<p>Thread.interrupt()的方法的主要作用是：<br>中断本线程。无返回值。具体作用分以下几种情况：</p>
<blockquote>
<ol>
<li>如果该线程正阻塞于Object类的wait()、wait(long)、wait(long, int)方法，或者Thread类的join()、join(long)、join(long, int)、sleep(long)、sleep(long, int)方法，则该线程的中断状态将被清除，并收到一个java.lang.InterruptedException。</li>
<li>如果该线程正阻塞于interruptible channel上的I/O操作，则该通道将被关闭，同时该线程的中断状态被设置，并收到一个java.nio.channels.ClosedByInterruptException。</li>
<li>如果该线程正阻塞于一个java.nio.channels.Selector操作，则该线程的中断状态被设置，它将立即从选择操作返回，并可能带有一个非零值，就好像调用java.nio.channels.Selector.wakeup()方法一样。</li>
<li>如果上述条件都不成立，则该线程的中断状态将被设置。</li>
</ol>
</blockquote>
<p>是不是感觉有点晕XD。实际上简单点地说，就是<strong>当线程阻塞于wait/join/sleep是，中断状态会被清除掉，同时收到InterruptedException；而其他情况中断状态都被设置，并不一定收到异常</strong>。也就是说，interrupt只能通过抛出异常的形式，中断处于wait/join/sleep阻塞状态的线程。最后，我是通过在循环条件里面加一个检测停止条件volatile的flag(也就是running)，同时调用Thread.interrupt()方法。具体代码如下：</p>
<figure class="highlight java"><pre><div class="line"><span class="keyword">import</span> java.util.logging.Logger;</div><div class="line"></div><div class="line"><span class="javadoc">/**</span></div><div class="line"> * Created by jayzalex on 2015/1/15.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WorkingThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>{</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> running = <span class="keyword">true</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = Logger.getLogger(<span class="string">"Log"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(String[] args) <span class="keyword">throws</span> InterruptedException {</div><div class="line">		WorkingThread t = <span class="keyword">new</span> WorkingThread();</div><div class="line">		t.start();</div><div class="line">		Thread.sleep(<span class="number">1000</span>);</div><div class="line">		t.terminate();</div><div class="line">		t.join(); <span class="comment">// 调用join方法，检测线程是不是die</span></div><div class="line">		LOGGER.info(<span class="string">"Thread successfully stopped."</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">terminate</span>() {</div><div class="line">		running = <span class="keyword">false</span>; <span class="comment">// 发出停止信号</span></div><div class="line">		interrupt(); <span class="comment">// 考虑到阻塞于wait()或sleep()的情况，同时调用interrupt()</span></div><div class="line">	}</div><div class="line"></div><div class="line">	<span class="annotation">@Override</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {</div><div class="line">		<span class="keyword">while</span> (running) { <span class="comment">// 检测条件变量</span></div><div class="line">			<span class="keyword">try</span> {</div><div class="line">				LOGGER.info(<span class="string">"Sleep..."</span>);</div><div class="line">				Thread.sleep(<span class="number">100</span>);</div><div class="line">				LOGGER.info(<span class="string">"Processing..."</span>);</div><div class="line">				<span class="comment">// do dirty work // 业务代码</span></div><div class="line">			} <span class="keyword">catch</span> (InterruptedException e) {</div><div class="line">				e.printStackTrace();</div><div class="line">				running = <span class="keyword">false</span>;</div><div class="line">			}</div><div class="line">		}</div><div class="line">		LOGGER.info(<span class="string">"Stopped."</span>);</div><div class="line">	}</div><div class="line"></div><div class="line">}</div></pre></figure>

<h1 id="参考资料">参考资料</h1>
<hr>
<ol>
<li><a href="http://stackoverflow.com/questions/10961714/how-to-properly-stop-the-thread-in-java" target="_blank" rel="external">How to properly stop the Thread in Java</a></li>
<li><a href="http://ibruce.info/2013/12/19/how-to-stop-a-java-thread/" target="_blank" rel="external">如何停止一个正在运行的java线程</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="不能使用Thread-stop()方法的原因">不能使用Thread.stop()方法的原因</h1>
<hr>
<p>Thread.stop()主要通过抛出一个ThreadDeath异常来中断线程运行。但是这个方法是不安全的，这是因为当调用Thread.stop]]>
    </summary>
    
      <category term="thread" scheme="http://jayzalex.github.io/tags/thread/"/>
    
      <category term="java" scheme="http://jayzalex.github.io/tags/java/"/>
    
      <category term="java" scheme="http://jayzalex.github.io/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android-jsinterface]]></title>
    <link href="http://jayzalex.github.io/2014/12/11/android-jsinterface/"/>
    <id>http://jayzalex.github.io/2014/12/11/android-jsinterface/</id>
    <published>2014-12-11T08:18:28.000Z</published>
    <updated>2014-12-11T08:22:27.000Z</updated>
    <content type="html"><![CDATA[]]></content>
    <summary type="html">
    <![CDATA[]]>
    </summary>
    
      <category term="android" scheme="http://jayzalex.github.io/tags/android/"/>
    
      <category term="JavascriptInterface" scheme="http://jayzalex.github.io/tags/JavascriptInterface/"/>
    
      <category term="WebView" scheme="http://jayzalex.github.io/tags/WebView/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客页面加载很慢的问题]]></title>
    <link href="http://jayzalex.github.io/2014/11/13/hexo-googleapis/"/>
    <id>http://jayzalex.github.io/2014/11/13/hexo-googleapis/</id>
    <published>2014-11-13T14:03:54.000Z</published>
    <updated>2015-01-15T02:02:03.000Z</updated>
    <content type="html"><![CDATA[<p>最近用hexo写博客，发现页面加载速度非常慢，发现主要原因是<strong>hexo的模板里引用了googleapis中的jquery.min.js和fonds，googleapis会被墙</strong>。<br>可以使用360网站卫士<a href="http://libs.useso.com/" target="_blank" rel="external">http://libs.useso.com/</a>的前端库替换掉原先的。</p>
<h3 id="示例：">示例：</h3>
<p>以<code>light</code>主题为例子，需要更改下面三处地方：</p>
<p>\themes\light\layout_partial\after_footer.ejs:<br>原先是</p>
<figure class="highlight script"><pre><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div></pre></figure>

<p>改为</p>
<figure class="highlight script"><pre><div class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//ajax.useso.com/ajax/libs/jquery/2.0.3/jquery.min.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div></pre></figure>

<p>\public\css\style.css:<br>原先是</p>
<figure class="highlight script"><pre><div class="line"><span class="attribute">fonts.googleapis.com/css?family</span>=<span class="string">Lato:400,400italic</span></div></pre></figure>

<p>改为</p>
<figure class="highlight css\style"><pre><div class="line"><span class="attribute">fonts.useso.com/css?family</span>=<span class="string">Lato:400,400italic</span></div></pre></figure>

<p>\themes\light\source\css_base\variable.styl:<br>原先是</p>
<figure class="highlight css\style"><pre><div class="line"><span class="attribute">fonts.googleapis.com/css?family</span>=<span class="string">Lato:400,400italic</span></div></pre></figure>

<p>改为</p>
<figure class="highlight css\style"><pre><div class="line"><span class="attribute">fonts.useso.com/css?family</span>=<span class="string">Lato:400,400italic</span></div></pre></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>最近用hexo写博客，发现页面加载速度非常慢，发现主要原因是<strong>hexo的模板里引用了googleapis中的jquery.min.js和fonds，googleapis会被墙</strong>。<br>可以使用360网站卫士<a href="http://li]]>
    </summary>
    
      <category term="hexo" scheme="http://jayzalex.github.io/tags/hexo/"/>
    
      <category term="googleapis" scheme="http://jayzalex.github.io/tags/googleapis/"/>
    
      <category term="useso" scheme="http://jayzalex.github.io/tags/useso/"/>
    
      <category term="hexo" scheme="http://jayzalex.github.io/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://jayzalex.github.io/2014/11/11/hello-world/"/>
    <id>http://jayzalex.github.io/2014/11/11/hello-world/</id>
    <published>2014-11-11T13:49:54.000Z</published>
    <updated>2014-11-11T13:49:54.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><pre><div class="line">$ hexo server</div></pre></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><pre><div class="line">$ hexo generate</div></pre></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><pre><div class="line">$ hexo deploy</div></pre></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
